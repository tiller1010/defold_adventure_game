function init(self)
	self.powerup_box_nodes = {}
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash('health_change') then
		gui.set_text(gui.get_node('health'), 'Health: ' .. message.health)
		gui.set(gui.get_node('health_bar'), 'size.x', message.health * 2)
	elseif message_id == hash('powerup') then
		local ammo_x_start = 130
		local ammo_y_start = 565
		gui.set_text(gui.get_node('powerup'), 'Powerup: ' .. message.powerup)
		for i = 1, message.ammo, 1 do
			if not self.powerup_box_nodes[i] then
				local new_node = gui.new_box_node(vmath.vector3(i * 50 + ammo_x_start, ammo_y_start, 1), vmath.vector3(10, 10, 1))
				self.powerup_box_nodes[i] = new_node
			end
		end
	elseif message_id == hash('powerup_used') then
		gui.delete_node(self.powerup_box_nodes[#self.powerup_box_nodes])
		self.powerup_box_nodes[#self.powerup_box_nodes] = nil
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
