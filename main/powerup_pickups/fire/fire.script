local player_helper = require('main/player/player_helpers')

go.property('ammo_amount', 2)
go.property('regenerates', false)

function init(self)
	sprite.set_constant('#meter', 'tint', vmath.vector4(1, 1, 1, 0))
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") and message.other_group == hash("player") then
		local player_url = player_helper.get_player_url(go)
		msg.post(player_url, "powerup", { powerup = 'fire', ammo = self.ammo_amount })
		
		if self.regenerates then
			msg.post('#collisionobject', 'disable')
			sprite.set_constant('#sprite', 'tint', vmath.vector4(.5, .5, .5, .5))

			go.set('#meter', 'scale.x', 1)
			sprite.set_constant('#meter', 'tint', vmath.vector4(1, 1, 1, 1))

			-- Shrink meter
			for i = 0, 5, .1 do
				local percentage = (5 - i) / 5
				timer.delay(i, false, function ()
					go.set('#meter', 'scale.x', percentage)
				end)
			end
			
			timer.delay(5, false, function ()
				msg.post('#collisionobject', 'enable')
				sprite.set_constant('#sprite', 'tint', vmath.vector4(1, 1, 1, 1))
				sprite.set_constant('#meter', 'tint', vmath.vector4(1, 1, 1, 0))
			end)
		else
			go.delete()
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
